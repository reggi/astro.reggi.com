---
import Icon from 'astro-icon'

export const propNames = [
  'defaultDark',
  'defaultLight',
  'forceDark',
  'forceLight',
  'hidden'
]

export type Props = {
  defaultDark?: boolean
  defaultLight?: boolean
  forceDark?: boolean
  forceLight?: boolean
  hidden?: boolean
}

const {
  defaultDark,
  defaultLight,
  forceDark,
  forceLight,
  hidden
} = Astro.props
---
<style is:global>
  .dark #moon { display: none }
  html:not(.dark) #sun { display: none }
</style>

<style>
  button {
    border: 0;
    background: none;
  }
</style>

{!hidden && (
<button id="dark-mode">
  <Icon name="sun" id="sun" class="w-[40px]"/>
  <Icon name="moon" id="moon" class="w-[40px]"/>
</button>
)}

<script is:inline define:vars={{ forceLight, forceDark, defaultLight, defaultDark }}>
  const theme = (() => {
    if (forceLight) return 'light';
    if (forceDark) return 'dark';
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (defaultLight) return 'light';
    if (defaultDark) return 'dark';
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();
  
  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document
    .getElementById("dark-mode")
    .addEventListener("click", handleToggleClick);
</script>