---
// import 'astro-cache-embed/db'
import DarkMode, { type Props as DarkModeProps } from '@/components/DarkMode.astro'
import Sidebar from '@/components/Sidebar.astro'
import Hamburger from '@/components/Hamburger.astro'
import { type PrefixType, getPrefixProps } from '@/lib/prefix_types'

export type Props = PrefixType<'theme', DarkModeProps> & {
  canonical?: string
  class?: string
  frontmatter?: any
  hideAll?: boolean
  hideFooter?: boolean
  hideHamburger?: boolean
  hideSidebar?: boolean
  disableDarkMode?: boolean
  title: string
  background?: string
  description?: string
}

let {
  canonical,
  class: className,
  frontmatter,
  hideAll,
  hideFooter,
  hideHamburger,
  hideSidebar,
  disableDarkMode,
  title,
  background,
  description
} = Astro.props

if (hideAll) {
  hideFooter = true
  hideHamburger = true
  hideSidebar = true
  disableDarkMode = true
}

const links = [
  { href: '/', text: 'About Me' },
  { href: '/articles', text: 'Tech Articles' },
  { href: '/brushwork', text: 'Brushwork' },
  { href: '/art', text: 'Artwork' },
  { href: '/resume', text: 'Resume' }
]
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		{ description && <meta name="description" content={description} />}
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/gif" href="/favicon.gif" />
    <link href="https://https://indieweb.social/@thomasreggi" rel="me">
    <meta name="generator" content={Astro.generator} />
		<title>{title || frontmatter?.title}</title>
    { canonical && <link rel="canonical" href={canonical} /> }
    { background && <style is:inline set:text={`body { background: ${background}; }`}></style> }
	</head>
	<body>

    {hideSidebar ? (
      <div class={`mx-auto max-w-[860px]`}> 
        <main class={className}>
          <slot />
        </main>
      </div>
    ) : (

      <div class="max-w-[860px] mx-auto flex flex-col">
        <div class="pb-5 block md:hidden">
          <Sidebar links={links} landscape/>
        </div>
        <div class="flex-inline">
          <div class="w-[155px] hidden md:block fixed">
            <Sidebar links={links}/>
          </div>
          <div class="sm:pl-[0px] md:pl-[170px] max-w-[860px]"> 
            <main class={className}>
              <slot />
            </main>
          </div>
        </div>
      </div>
    )}

    <div class="fixed top-0 right-0 p-5">
      <div class="flex flex-col gap-5">
        {!disableDarkMode && <DarkMode {...getPrefixProps('theme', Astro.props)}/> }
        {!hideHamburger && <Hamburger links={links}/>}
      </div>
    </div>

    {!hideFooter && <footer class="text-center mt-20 mb-10">
      {links.map((link, index) => ( <>
        <a href={link.href}>{link.text}</a>
        {index < links.length - 1 && ' | '}
      </>))}
    </footer>}
	</body>
</html>
